import type * as Enums from '../enums/_enums'
import type { DataSource } from './_types'

/**
 * A field contains information about what data source it belongs to, its role, and the ability to fetch the domain values.
 */
export interface Field {
  /**
   * The type of aggregation for this field.
   */
  aggregation: Enums.FieldAggregationType

  /**
   * The type of the column, either discrete or continuous. Could hold value 'Unknown'.
   */
  columnType: Enums.ColumnType

  /**
   * The data source to which this field belongs.
   */
  dataSource: DataSource

  /**
   * The data type of the field
   */
  dataType?: Enums.DataType

  /**
   * User description of field, undefined if there is none.
   */
  description?: string

  /**
   * Unique string representing this field in this datasource.
   */
  id: string

  /**
   * True if this field is a table calculation.
   */
  isCalculatedField: boolean

  /**
   * True if this field is a combination of multiple fields, false otherwise.
   */
  isCombinedField: boolean

  /**
   * True if this field is generated by Tableau, false otherwise. Tableau generates a number of fields for a data source,
   * such as Number of Records, or Measure Values. This property can be used to distinguish between those fields and
   * fields that come from the underlying data connection, or were created by a user.
   */
  isGenerated: boolean

  /**
   * True if this role has a semantic type of geospatial: e.g latitude, longitude, zipcode, City name...
   */
  isGeospatial: boolean

  /**
   * True if this field is hidden, false otherwise.
   */
  isHidden: boolean

  /**
   * True if this field comes from the published datasource. False if it was created in Tableau (as a calculated field, for example).
   */
  isPresentOnPublishedDatasource: boolean

  /**
   * The name of the field (i.e. the caption).
   */
  name: string

  /**
   * The role of this field.
   */
  role: Enums.FieldRoleType
}
